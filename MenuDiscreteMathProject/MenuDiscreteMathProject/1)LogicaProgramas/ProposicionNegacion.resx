<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABkAFADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        zfG/xG0f4baUL/XtY03RbIuqfaL6dYIgWIAyzEDqR6daZ4m+J2ieDLO2uNU1ewsLW8kEUEtxMsayuRkK
        pJ5OOQO+a8k/4KN+C9P+JX7KeteHNUt/tGna9fabp11GrbW8ua9hjYg9iASfwr5i+FnxZ8Vfs9eN7b9n
        P4mTzXt5Z65YXPgLxDcKdviTTFuVzA7c/v4UwpH8SilWxEaUkpLTufL4jHujU9nNe6+vmfopa6gtzCJF
        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
</value>
  </data>
</root>